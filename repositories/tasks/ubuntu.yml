---

# Old format deb repositories Bionic
- name: Configure repo apt old format <|> Ubuntu Bionic
  ansible.builtin.apt_repository:
    update_cache: False
    repo:     '{{ item.repo }}'
    codename: '{{ item.codename | default(omit) }}'
    filename: '{{ item.filename | regex_replace(".list$", "") | regex_replace(".sources$", "") }}'
    mode:     '{{ item.mode | default(omit) }}'
    state:    '{{ item.state | default("present") }}'
  loop: >-
    {{
      bionic_base_repositories | default([]) 
      | union(bionic_product_repositories | default([]))
      | union(bionic_hosts_repositories | default([]))
    }}
  register: apt_register_bionic_all_repo
  when:
    - ansible_facts.distribution == "Ubuntu"
    - ansible_facts.distribution_major_version == "18"
    - bionic_base_repositories is defined or
      bionic_product_repositories is defined or
      bionic_hosts_repositories is defined
  tags: 
    - add_ubuntu_repo

# Old format deb repositories Focal
- name: Configure repo apt old format <|> Ubuntu Focal
  ansible.builtin.apt_repository:
    update_cache: False
    repo:     '{{ item.repo }}'
    codename: '{{ item.codename | default(omit) }}'
    filename: '{{ item.filename | regex_replace(".list$", "") | regex_replace(".sources$", "") }}'
    mode:     '{{ item.mode | default(omit) }}'
    state:    '{{ item.state | default("present") }}'
  loop: >-
    {{
      focal_base_repositories | default([]) 
      | union(focal_product_repositories | default([]))
      | union(focal_hosts_repositories | default([]))
    }}
  register: apt_register_focal_all_repo
  when:
    - ansible_facts.distribution == "Ubuntu"
    - ansible_facts.distribution_major_version == "20"
    - focal_base_repositories is defined or
      focal_product_repositories is defined or
      focal_hosts_repositories is defined
  tags: 
    - add_ubuntu_repo

# Old format deb repositories Jammy
- name: Configure repo apt old format <|> Ubuntu Jammy
  ansible.builtin.apt_repository:
    update_cache: False
    repo:     '{{ item.repo }}'
    codename: '{{ item.codename | default(omit) }}'
    filename: '{{ item.filename | regex_replace(".list$", "") | regex_replace(".sources$", "") }}'
    mode:     '{{ item.mode | default(omit) }}'
    state:    '{{ item.state | default("present") }}'
  loop: >-
    {{
      jammy_base_repositories | default([]) 
      | union(jammy_product_repositories | default([]))
      | union(jammy_hosts_repositories | default([]))
    }}
  register: apt_register_jammy_all_repo
  when:
    - ansible_facts.distribution == "Ubuntu"
    - ansible_facts.distribution_major_version == "22"
    - jammy_base_repositories is defined or
      jammy_product_repositories is defined or
      jammy_hosts_repositories is defined
  tags: 
    - add_ubuntu_repo

# New format deb repositories Noble
- name: Configure repo Deb822 <|> Ubuntu Noble
  ansible.builtin.deb822_repository:
    allow_downgrade_to_insecure: '{{ item.allow_downgrade_to_insecure | default(omit) }}'
    allow_insecure:    '{{ item.allow_insecure | default(omit) }}'
    allow_weak:        '{{ item.allow_weak | default(omit) }}'
    architectures:     '{{ item.architectures | default(omit) }}'
    by_hash:           '{{ item.by_hash | default(omit) }}'
    check_date:        '{{ item.check_date | default(omit) }}'
    check_valid_until: '{{ item.check_valid_until | default(omit) }}'
    components:        '{{ item.components | default(omit) }}'
    data_max_future:   '{{ item.date_max_future | default(omit) }}'
    enabled:           '{{ item.enabled | default(omit) }}'
    inrelease_path:    '{{ item.inrelease_path | default(omit) }}'
    languages:         '{{ item.languages | default(omit) }}'
    name:              '{{ item.name }}'
    mode:              '{{ item.mode | default(omit) }}'
    pdiffs:            '{{ item.pdiffs | default(omit) }}'
    signed_by:         '{{ item.signed_by | default(omit) }}'
    state:             '{{ item.state | default("present") }}'
    suites:            '{{ item.suites | default(omit) }}'
    targets:           '{{ item.targets | default(omit) }}'
    trusted:           '{{ item.trusted | default(omit) }}'
    types:             '{{ item.types | default("deb") }}'
    uris:              '{{ item.uris }}'
  loop: >-
    {{
      nooble_base_repositories | default([]) 
      | union(nooble_product_repositories | default([]))
      | union(nooble_hosts_repositories | default([]))
    }}
  register: apt_register_nooble_all_repo
  when:
    - ansible_facts.distribution == "Ubuntu"
    - ansible_facts.distribution_major_version == "24"
    - nooble_base_repositories is defined or
      nooble_product_repositories is defined or
      nooble_hosts_repositories is defined
  tags: 
    - add_ubuntu_repo

- name: Update apt cache <|> Ubuntu Noble
  ansible.builtin.apt:
    update_cache: True
  when: apt_register_nooble_all_repo.changed
  tags: 
    - add_ubuntu_repo
